<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>General on Blog</title>
    <link>https://martinkubecka.github.io/posts/general/</link>
    <description>Recent content in General on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Fri, 28 Jan 2022 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://martinkubecka.github.io/posts/general/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Setting up your own Recursive DNS Server</title>
        <link>https://martinkubecka.github.io/posts/general/recursive_dns/</link>
        <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
        
        <atom:modified>Fri, 28 Jan 2022 00:00:00 +0000</atom:modified>
        <guid>https://martinkubecka.github.io/posts/general/recursive_dns/</guid>
        <description>Introduction Unbound is a validating, recursive, caching open-source DNS resolver primarily developed by NLnet Labs, VeriSign Inc., Nominet, and Kirei. To help increase our online privacy, unbound supports DNS-over-TLS and DNS-over-HTTPS which allows clients to encrypt their communication. Unbound runs on FreeBSD, OpenBSD, NetBSD, MacOS, Linux and Microsoft Windows, with packages available for most platforms.
This guide is intended for unbound installation in conjunction with Pi-hole and therefore Pi-hole is the only prerequisite.</description>
        
        <dc:creator>Martin Kubecka</dc:creator>
        <media:content url="https://martinkubecka.github.io/images/general/recursive-dns/logo.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>unbound</category>
            
          
            
              <category>pi-hole</category>
            
          
            
              <category>privacy</category>
            
          
        
        
          
            
              <category>Homelab</category>
            
          
        
        
      </item>
      
      <item>
        <title>Weaponizing Malicious Macros</title>
        <link>https://martinkubecka.github.io/posts/general/malicious-macros/</link>
        <pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate>
        
        <atom:modified>Wed, 12 May 2021 00:00:00 +0000</atom:modified>
        <guid>https://martinkubecka.github.io/posts/general/malicious-macros/</guid>
        <description>Excel Malicious Macro Introduction Microsoft Excel is a very useful program that makes life easier for millions of people and companies around the world. It is a robust tool for data collection and visualization, creation of calculations and more. Unfortunately, software that offers script-based automation capabilities also has its downsides.
A macro is a script that is used to automate tasks in Excel documents, e.g. calculations. Because macros are part of an Excel document and can run automatically, they are a good tool for an attacker to control a computer.</description>
        
        <dc:creator>Martin Kubecka</dc:creator>
        <media:content url="https://martinkubecka.github.io/images/general/malicious-macros/icon.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>malware</category>
            
          
        
        
          
            
              <category>Windows</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>